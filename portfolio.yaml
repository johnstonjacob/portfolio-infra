Parameters:
    NameOfService:
        Description: "Name of the service"
        Type: String
    KeyName:
        Description: "Name of SSH Key"
        Type: String
    Ami:
        Description: "AMI Image ID"
        Type: String
Resources:
    LaunchConfig: 
      Type: AWS::AutoScaling::LaunchConfiguration
      Properties: 
        KeyName: 
          Ref: "KeyName"
        ImageId: !Ref Ami
        SecurityGroups: 
          - !GetAtt SSHAccess.GroupId
          - !GetAtt AppAccess.GroupId
        InstanceType: t2.micro
    WebServerGroup: 
      Type: AWS::AutoScaling::AutoScalingGroup
      Properties: 
        AvailabilityZones: 
          Fn::GetAZs: ""
        LaunchConfigurationName: 
          Ref: LaunchConfig
        MinSize: "1"
        MaxSize: "3"
        LoadBalancerNames: 
          - !Ref ElasticLoadBalancer
    ElasticLoadBalancer:
      Type: AWS::ElasticLoadBalancing::LoadBalancer
      Properties:
        SecurityGroups: 
          - !GetAtt SSHAccess.GroupId
          - !GetAtt HTTPAccess.GroupId
        AvailabilityZones:
          Fn::GetAZs: ''
        Listeners:
        - LoadBalancerPort: '80'
          InstancePort: 80
          Protocol: tcp
        - LoadBalancerPort: '8000'
          InstancePort: 8000
          Protocol: tcp
        HealthCheck:
          Target:
            Fn::Join:
            - ''
            - - 'TCP:'
              - 80
          HealthyThreshold: '3'
          UnhealthyThreshold: '5'
          Interval: '30'
          Timeout: '5'
    SSHAccess:
      Type: 'AWS::EC2::SecurityGroup'
      Properties:
          GroupName: !Join
            - " "
            - - SSH Access - 
              - !Ref NameOfService 
          GroupDescription: Enable SSH access via port 22
          SecurityGroupIngress:
            - IpProtocol: tcp
              FromPort: '22'
              ToPort: '22'
              CidrIp: 0.0.0.0/0
    HTTPAccess:
      Type: 'AWS::EC2::SecurityGroup'
      Properties:
          GroupName: !Join
            - " "
            - - HTTP/S Access - 
              - !Ref NameOfService 
          GroupDescription: Enable HTTP/S Access
          SecurityGroupIngress:
            - IpProtocol: tcp
              FromPort: 80
              ToPort: 80
              CidrIp: 0.0.0.0/0 
            - IpProtocol: tcp
              FromPort: 443
              ToPort: 443
              CidrIp: 0.0.0.0/0 
            - IpProtocol: tcp
              FromPort: 8000
              ToPort: 8000
              CidrIp: 0.0.0.0/0 
    AppAccess:
      Type: 'AWS::EC2::SecurityGroup'
      Properties:
          GroupName: !Join
            - " "
            - - App Access - 
              - !Ref NameOfService 
          GroupDescription: Enable Applications Access
          SecurityGroupIngress:
            - IpProtocol: tcp
              FromPort: 8000
              ToPort: 8000
              SourceSecurityGroupName: !Join
                - " "
                - - HTTP/S Access - 
                  - !Ref NameOfService 
            - IpProtocol: tcp
              FromPort: 80
              ToPort: 80
              SourceSecurityGroupName: !Join
                - " "
                - - HTTP/S Access - 
                  - !Ref NameOfService 
